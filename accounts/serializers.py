from dj_rest_auth.serializers import PasswordResetSerializer
from dj_rest_auth.forms import AllAuthPasswordResetForm
from django.core.mail import send_mail
from django.conf import settings
from allauth.account.utils import user_pk_to_url_str
from allauth.account.forms import default_token_generator
class CustomPasswordResetSerializer(PasswordResetSerializer):
    def save(self, **kwargs):
        request = self.context.get("request")
        # Use the AllAuthPasswordResetForm to handle token generation and email sending
        password_reset_form = AllAuthPasswordResetForm(data=self.initial_data)

        if password_reset_form.is_valid():
            # Since AllAuthPasswordResetForm handles token generation, we can directly use it
            for user in password_reset_form.users:
                # UID generation
                uid = user_pk_to_url_str(user)  # Base64-encoded user ID
                # Get the token generated by the form (AllAuthPasswordResetForm)
                token = kwargs.get('token_generator', default_token_generator).make_token(user)

                # Construct the reset URL
                reset_url = f"{settings.FRONTEND_URL}/passwordreset/?uid={uid}&token={token}"

                # Send the reset email with the generated URL
                send_mail(
                    subject="Password Reset Request",
                    message=f"Click the link below to reset your password:\n{reset_url}",
                    from_email=settings.DEFAULT_FROM_EMAIL,
                    recipient_list=[user.email],
                )
